name: build nodejs v16 withssl

on: 
  workflow_dispatch:
    inputs:
      tag_date:
        description: 'tag date'     
        required: true

env:
  VERSION: 16.19.1

jobs:      
  build_ios:
    name: iOS
    runs-on: macos-12
    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '13'
    - uses: actions/checkout@v2
    - name: npm install
      shell: bash
      run: npm install
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        sh ./ios.sh ${{env.VERSION}} 1
    - name: Rename
      run: |
        mv ~/puerts-node/nodejs ~/puerts-node/nodejs_16
    - uses: actions/upload-artifact@v2
      with:
        name: nodejs_bin
        path: ~/puerts-node/**/*
        
  publish:
    runs-on: ubuntu-latest
    needs: [build_ios]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: nodejs_bin
          path: nodejs_bin/
          
      - name: Create Release Asset
        run: |
          cd nodejs_bin/ && tar cvfz ../nodejs_bin_${{env.VERSION}}.tgz nodejs_16 && cd -
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: NodeJS_${{env.VERSION}}_ssl_${{ github.event.inputs.tag_date }}
          release_name: NodeJS_${{env.VERSION}}(with ssl)_${{ github.event.inputs.tag_date }}
          draft: false
          prerelease: false
          
      - name: Upload nodejs_bin
        #id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nodejs_bin_${{env.VERSION}}.tgz
          asset_name: nodejs_bin_${{env.VERSION}}.tgz
          asset_content_type: application/tgz
          
